{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/Contact/Contact.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","form","this","wrapper","htmlFor","input","type","pattern","title","required","id","onChange","submitButton","Component","Contact","record","spacing","ContactList","visibleList","onDelete","list","map","item","line","deleteButton","onClick","Filter","onFilter","filterLabel","filter","App","contacts","formSubmitHandler","newRecord","normalizedNewName","toLowerCase","some","alert","previous","updateFilter","getFilteredContacts","normalizedFilter","contact","includes","deleteContact","toDeleteId","phonebookContactsParsed","JSON","parse","localStorage","getItem","PrevState","PrevProps","setItem","stringify","container","headline","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85e74db1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3OMLc\",\"line\":\"ContactList_line__1OR9_\",\"deleteButton\":\"ContactList_deleteButton__Zdf5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__GQvF7\",\"App-logo\":\"App_App-logo__5tD-O\",\"App-logo-spin\":\"App_App-logo-spin__9iLFe\",\"App-header\":\"App_App-header__3w9G_\",\"App-link\":\"App_App-link__3Eysd\",\"headline\":\"App_headline__1pB_s\",\"container\":\"App_container__3JX99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__36BaQ\",\"filterLabel\":\"Filter_filterLabel__Wy6RB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__15qAG\",\"wrapper\":\"ContactForm_wrapper__20W8e\",\"input\":\"ContactForm_input__11mC5\",\"submitButton\":\"ContactForm_submitButton__2IHO2\"};","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <div className={s.wrapper}>\r\n          <label htmlFor={this.nameInputId}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              id={this.nameInputId}\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label htmlFor={this.numberInputId}>\r\n            Phone Number\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              id={this.numberInputId}\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <button className={s.submitButton } type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport s from './Contact.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contact = ({ name, number }) => {\r\n    return (\r\n      <p className={s.record}>\r\n        <span className={s.name}> {name}</span> <span className={s.spacing}>:</span>\r\n        <span className={s.number}>{number}</span>\r\n      </p>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport Contact from '../Contact/Contact';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ visibleList, onDelete }) => {\r\n    return (\r\n      <ul className={s.list}>\r\n        {visibleList.map(item => (\r\n          <li key={item.id} className={s.line}>\r\n            <Contact\r\n              name={item.name}\r\n              number={item.number}\r\n              onDelete={onDelete}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className={s.deleteButton}\r\n              onClick={()=>onDelete(item.id)}\r\n            ></button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n\r\n};\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  visibleList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })),\r\n  onDelete: PropTypes.func,\r\n};\r\n","import React from 'react'\r\nimport s from './Filter.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({value, onFilter}) => {\r\n    return(\r\n    <label className={s.filterLabel}>\r\n        Search by name\r\n            <input type=\"text\" className={s.filter} value={value} onChange={onFilter}/>\r\n        </label>\r\n        )\r\n}\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n};\r\n","\nimport React from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList'\nimport Filter from './components/Filter/Filter';\nimport s from'./App.module.css';\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: ''\n  };\n  \n\n  formSubmitHandler = newRecord => {\n    const normalizedNewName = newRecord.name.toLowerCase();\n    const isUnique = !this.state.contacts.some(({ name }) =>\n      name.toLowerCase() === normalizedNewName);\n    if (!isUnique) {\n      alert('THIS NAME IS ALREADY PRESENT IN A PHONEBOOK');\n      return\n    }\n    this.setState(previous => {\n      newRecord.id = shortid.generate();\n      return {contacts: [...previous.contacts, newRecord]}\n    }\n     )\n  };\n\n\n  updateFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getFilteredContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n  contact.name.toLowerCase().includes(normalizedFilter));\n  }\n\n  deleteContact = toDeleteId => {\n    this.setState(previous => {\n      return { contacts: previous.contacts.filter(contact => contact.id !== toDeleteId) }\n    })\n  }\n  componentDidMount() {\n    const phonebookContactsParsed = JSON.parse(localStorage.getItem('phonebookContacts'));\n    if (phonebookContactsParsed) \n      this.setState({ contacts: phonebookContactsParsed });\n\n  }\n  componentDidUpdate(PrevState, PrevProps) {\n    if (PrevState.contacts !== this.state.contacts) {\n      localStorage.setItem('phonebookContacts', JSON.stringify(this.state.contacts));\n    }\n    \n}\n  \n  render() {\n    return (\n      <div className={s.container}>\n        <h1 className={s.headline}>Phone book</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2 className={s.headline}>Contacts</h2>\n        <Filter value={this.state.filter} onFilter={this.updateFilter} />\n        <ContactList\n          visibleList={this.getFilteredContacts()}\n          onDelete={this.deleteContact}\n        />\n      </div>\n    );\n  }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"record\":\"Contact_record__jHYVZ\",\"name\":\"Contact_name__EoBUL\",\"number\":\"Contact_number__pr0JZ\",\"spacing\":\"Contact_spacing__3-uwr\"};"],"sourceRoot":""}